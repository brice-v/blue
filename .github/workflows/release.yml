name: Release
on: 
  push:
    tags:
    - 'v*.*.*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.19.3]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
    - uses: WillAbides/setup-go-faster@v1.7.0
      with:
        go-version: ${{ matrix.go-version }}

    - name: Get dependencies
      run: sudo apt-get update && sudo apt-get install upx gcc libgl1-mesa-dev xorg-dev
      if: ${{ runner.os == 'Linux' }}

    - name: Tests
      run: go test ./...
    
    - name: Build Windows
      if: matrix.os == 'windows-latest'
      run: go build -ldflags='-s -w -extldflags="-static" -H=windowsgui' -o blue-win.exe .
    
    - name: Build Linux
      if: matrix.os == 'ubuntu-latest'
      run: go build -ldflags='-s -w' -o blue-linux .

    - name: Build Macos
      if: matrix.os == 'macos-latest'
      run: go build -ldflags='-s -w' -o blue-mac .
      
    - name: Compress windows binaries
      if: matrix.os == 'windows-latest'
      uses: svenstaro/upx-action@v2
      with:
        file: blue-win.exe
    
    - name: Compress linux binaries
      if: matrix.os == 'ubuntu-latest'
      uses: svenstaro/upx-action@v2
      with:
        file: blue-linux

    - name: Compress macos binaries
      if: matrix.os == 'macos-latest'
      uses: svenstaro/upx-action@v2
      with:
        file: blue-mac

    # This will draft a new release & will attach the binaries produced by the above outputs.
    # You still need to publish this release though after job ends.
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        files: |
          ./blue-win.exe
          ./blue-linux
          ./blue-mac
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # You don't need to add this in secrets it's by default.



